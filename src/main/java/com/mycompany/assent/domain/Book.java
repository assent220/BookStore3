package com.mycompany.assent.domain;
// Generated Dec 25, 2013 7:06:02 PM by Hibernate Tools 3.6.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Book generated by hbm2java
 */
@Entity
@Table(name = "book", catalog = "testHibernate", uniqueConstraints = @UniqueConstraint(columnNames = "isbn")
)
public class Book implements java.io.Serializable {

    private Integer idBook;
    private String isbn;
    private String name;
    private String description;
    private Date date;
    private Integer pages;
    private int price;
    private Set<Tag> tags = new HashSet<Tag>(0);
    private Set<Discount> discounts = new HashSet<Discount>(0);
    private Set<GroupBookDiscount> groupBookDiscounts = new HashSet<GroupBookDiscount>(0);
    private Set<Category> categories = new HashSet<Category>(0);
    private Set<BookWarehouse> bookWarehouses = new HashSet<BookWarehouse>(0);
    private Set<Publisher> publishers = new HashSet<Publisher>(0);
    private Set<OrderBook> orderBooks = new HashSet<OrderBook>(0);
    private Set<Author> authors = new HashSet<Author>(0);

    public Book() {
    }

    public Book(String isbn, String name, int price) {
        this.isbn = isbn;
        this.name = name;
        this.price = price;
    }

    public Book(String isbn, String name, String description, Date date, Integer pages, int price, Set<Tag> tags, Set<Discount> discounts, Set<GroupBookDiscount> groupBookDiscounts, Set<Category> categories, Set<BookWarehouse> bookWarehouses, Set<Publisher> publishers, Set<OrderBook> orderBooks, Set<Author> authors) {
        this.isbn = isbn;
        this.name = name;
        this.description = description;
        this.date = date;
        this.pages = pages;
        this.price = price;
        this.tags = tags;
        this.discounts = discounts;
        this.groupBookDiscounts = groupBookDiscounts;
        this.categories = categories;
        this.bookWarehouses = bookWarehouses;
        this.publishers = publishers;
        this.orderBooks = orderBooks;
        this.authors = authors;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "id_book", unique = true, nullable = false)
    public Integer getIdBook() {
        return this.idBook;
    }

    public void setIdBook(Integer idBook) {
        this.idBook = idBook;
    }

    @Column(name = "isbn", unique = true, nullable = false, length = 20)
    public String getIsbn() {
        return this.isbn;
    }

    public void setIsbn(String isbn) {
        this.isbn = isbn;
    }

    @Column(name = "name", nullable = false)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "description", length = 65535)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "date", length = 10)
    public Date getDate() {
        return this.date;
    }

    public void setDate(Date date) {
        this.date = date;
    }

    @Column(name = "pages")
    public Integer getPages() {
        return this.pages;
    }

    public void setPages(Integer pages) {
        this.pages = pages;
    }

    @Column(name = "price", nullable = false)
    public int getPrice() {
        return this.price;
    }

    public void setPrice(int price) {
        this.price = price;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "bookTag", catalog = "testHibernate", joinColumns = {
        @JoinColumn(name = "id_book", nullable = false, updatable = false)},
            inverseJoinColumns = {
                @JoinColumn(name = "id_tag", nullable = false, updatable = false)})
    public Set<Tag> getTags() {
        return this.tags;
    }

    public void setTags(Set<Tag> tags) {
        this.tags = tags;
    }

    @ManyToMany(fetch = FetchType.LAZY, mappedBy = "books")
    public Set<Discount> getDiscounts() {
        return this.discounts;
    }

    public void setDiscounts(Set<Discount> discounts) {
        this.discounts = discounts;
    }

    @ManyToMany(fetch = FetchType.LAZY, mappedBy = "books")
    public Set<GroupBookDiscount> getGroupBookDiscounts() {
        return this.groupBookDiscounts;
    }

    public void setGroupBookDiscounts(Set<GroupBookDiscount> groupBookDiscounts) {
        this.groupBookDiscounts = groupBookDiscounts;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "bookCategory", catalog = "testHibernate", joinColumns = {
        @JoinColumn(name = "id_book", nullable = false, updatable = false)},
            inverseJoinColumns = {
                @JoinColumn(name = "id_category", nullable = false, updatable = false)})
    public Set<Category> getCategories() {
        return this.categories;
    }

    public void setCategories(Set<Category> categories) {
        this.categories = categories;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "book")
    public Set<BookWarehouse> getBookWarehouses() {
        return this.bookWarehouses;
    }

    public void setBookWarehouses(Set<BookWarehouse> bookWarehouses) {
        this.bookWarehouses = bookWarehouses;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "bookPublisher", catalog = "testHibernate", joinColumns = {
        @JoinColumn(name = "id_book", nullable = false, updatable = false)},
            inverseJoinColumns = {
                @JoinColumn(name = "id_publisher", nullable = false, updatable = false)})
    public Set<Publisher> getPublishers() {
        return this.publishers;
    }

    public void setPublishers(Set<Publisher> publishers) {
        this.publishers = publishers;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "book")
    public Set<OrderBook> getOrderBooks() {
        return this.orderBooks;
    }

    public void setOrderBooks(Set<OrderBook> orderBooks) {
        this.orderBooks = orderBooks;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "bookAuthor", catalog = "testHibernate", joinColumns = {
        @JoinColumn(name = "ib_book", nullable = false, updatable = false)},
            inverseJoinColumns = {
                @JoinColumn(name = "id_author", nullable = false, updatable = false)})
    public Set<Author> getAuthors() {
        return this.authors;
    }

    public void setAuthors(Set<Author> authors) {
        this.authors = authors;
    }

    @Override
    public String toString() {
        return "Book{" + "idBook=" + idBook + ", isbn=" + isbn + ", name=" + name + ", pages=" + pages + ", price=" + price + '}';
    }
}
